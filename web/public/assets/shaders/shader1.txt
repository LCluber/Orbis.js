{
"vertex":"

	#ifdef GL_ES
	precision highp float;
	#endif

	attribute vec3 aVertexPosition;

	attribute vec2 aVertexTexCoord;
	varying   vec2 vVertexTexCoord;

	uniform mat4 uMMatrix;
	uniform mat4 uVMatrix;
	uniform mat4 uPMatrix;


	void main() {
		mat4 mv = uVMatrix * uMMatrix;

		gl_Position = uPMatrix * mv * vec4(aVertexPosition, 1.0);

		vVertexTexCoord = aVertexTexCoord;
	}",

"fragment":"
		#ifdef GL_ES
		precision highp float;
		#endif

		varying vec2 vVertexTexCoord;

		uniform sampler2D uEmissiveSampler;

		uniform vec3 uMaterialEmissive;
		uniform vec3 uMaterialEmissive2;
		uniform bool uPolarity;

		#ifdef TWINKLE
		uniform float uTwinkle;
		#endif

		void main() {

			vec4 emissiveColor = texture2D(uEmissiveSampler, vVertexTexCoord);
			vec3 me = uMaterialEmissive;

			float alpha = 1.;

			#ifdef TWINKLE
				alpha *= uTwinkle;
			#endif

			if(alpha == 0.0){
				discard;
			}

			gl_FragColor = vec4(emissiveColor.rgb * me, alpha);

		}"
}
